{"version":3,"sources":["file:///D:/CocosCreator/BuildLevel/assets/scripts/Mirror.ts"],"names":["MirrorState","ChangeMirror","i","j","lightdir","L_array","Array","length","FS_array","Collect","flower","getComponent","ChangeState","_decorator","Node","Component","director","sys","MapInfo","GetTotalColor","matrix1","matrix2","LS_array","Flower","flower_array","LightTravel","FanseType","NewFanseArray","FanseDetect","FanseDraw","MainTheme","FS_locate","ccclass","property","mirror_array","constructor","dir","area","locate","Mirror","squarex","squarey","isClick","onLoad","push","start","node","on","EventType","TOUCH_START","touchStart","GetMirrorIndex","_id","localeCompare","SetMirror","mirror_state","setPosition","totalsize","xshift1","yshift1","rotatable","setRotationFromEuler","id","mirrordir","totalsize2x","xshift2","totalsize2y","yshift2","ChangeMirrorState","index","scene_name","getScene","name","MS_array","JSON","parse","localStorage","getItem","setItem","stringify","event","TOUCH_END","touchEnd","TOUCH_MOVE","touchMove","scheduleOnce","maintheme","parent","Success","x","getUILocation","y","new_x","new_y","xstart1","xend1","ystart1","yend1","Math","floor","r0","g0","b0","xstart2","xend2","ystart2","yend2","getPosition","getUIDelta"],"mappings":"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","sourcesContent":["\nimport { _decorator, Node, EventTouch, Component, director, sys } from 'cc';\nimport { MapInfo } from './MapInfo';\nimport { GetTotalColor, matrix1, matrix2 } from './Square';\nimport { LS_array } from './Light';\nimport { Flower, flower_array } from './Flower';\nimport { LightSource, LightTravel, FanseType, NewFanseArray, FanseDetect, FanseDraw } from './LightTravel';\nimport { MainTheme, FS_locate } from './MainTheme';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = Mirror\n * DateTime = Fri Oct 29 2021 12:54:14 GMT+0800 (中国标准时间)\n * Author = Moonlord\n * FileBasename = Mirror.ts\n * FileBasenameNoExtension = Mirror\n * URL = db://assets/scripts/Mirror.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n\nexport function ChangeMirror() {\n    let i:number, j:number;\n    for(i=0; i<15*15; i++) {\n        for(j=0; j<8*9; j++) {\n            matrix1[i].lightdir[j] = false;\n        }\n    }\n\n    let L_array:LightSource[] = new Array<LightSource>(LS_array.length);\n    for(let i=0; i<LS_array.length; i++) L_array[i] = LS_array[i];\n\n    let FS_array = NewFanseArray();\n    FS_locate[0] = -1;\n    FS_locate[1] = -1;\n    LightTravel(L_array, FS_array, FanseType.Collect);\n    if(FS_locate[0] >= 0) {\n        FanseDetect(FS_locate, FS_array);\n        FanseDraw(FS_locate, FS_array);\n    }\n\n    for(i=0; i<flower_array.length; i++) {\n        let flower = flower_array[i].getComponent(Flower);\n        flower.ChangeState();\n    }\n}\n\nexport let mirror_array = new Array<Mirror>();\n\nexport class MirrorState {\n    public dir:number;\n    public area:number;\n    public locate:number[];\n\n    constructor(dir:number, area:number, locate:number[]) {\n        this.dir = dir;\n        this.area = area;\n        this.locate = locate;\n    }\n}\n\n@ccclass('Mirror')\nexport class Mirror extends Component {\n    @property\n    public id:number = 0;\n    @property\n    public rotatable:boolean = true;\n    public dir:number;\n    public area:number;\n    public squarex:number;\n    public squarey:number;\n    private isClick:boolean = true;\n\n    onLoad() {\n        mirror_array.push(this);\n    }\n\n    start () {\n        this.node.on(Node.EventType.TOUCH_START, this.touchStart, this);\n    }\n\n    GetMirrorIndex(): number {\n        for(let i=0; i<mirror_array.length; i++) {\n            if(!this._id.localeCompare(mirror_array[i]._id)) return i;\n        }\n        return null;\n    }\n\n    SetMirror(mirror_state:MirrorState) {\n        this.dir = mirror_state.dir\n        this.area = mirror_state.area;\n        this.squarex = mirror_state.locate[0];\n        this.squarey = mirror_state.locate[1];\n\n        if(this.area == 1){\n            this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n            if(this.rotatable) this.node.setRotationFromEuler(0, 0, this.dir*45);\n            if(this.squarex*15 + this.squarey < 15*15){\n                matrix1[this.squarex*15 + this.squarey].id = this.id;\n                matrix1[this.squarex*15 + this.squarey].mirrordir = this.dir;\n            }\n        }\n        else if(this.area == 2) {\n            this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n            if(this.rotatable) this.node.setRotationFromEuler(0, 0, this.dir*45);\n            if(this.squarex*2 + this.squarey < 2*12){\n                matrix2[this.squarex*2 + this.squarey] = true;\n            }\n        }\n    }\n\n    ChangeMirrorState(index:number) {\n        let scene_name = director.getScene().name;\n        let MS_array:MirrorState[] = JSON.parse(sys.localStorage.getItem(scene_name));\n        MS_array[index].dir = this.dir;\n        MS_array[index].area = this.area;\n        MS_array[index].locate = [this.squarex, this.squarey];\n        sys.localStorage.setItem(scene_name, JSON.stringify(MS_array));\n    }\n\n    touchStart (event:EventTouch) {\n        this.isClick = true;\n        this.node.on(Node.EventType.TOUCH_END, this.touchEnd, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this.touchMove, this);\n        this.scheduleOnce(function(){\n            this.isClick = false;\n        }, 0.1)\n    }\n\n    touchEnd (event:EventTouch) {\n        let index = this.GetMirrorIndex();\n        if(this.isClick){\n            if(this.rotatable){\n                this.dir = (this.dir + 1) % 8;\n                this.node.setRotationFromEuler(0, 0, this.dir * 45);\n                this.ChangeMirrorState(index);\n            }\n            if(this.area == 1){\n                this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n                matrix1[this.squarex*15 + this.squarey].mirrordir = this.dir;\n                ChangeMirror();\n                let maintheme = this.node.parent.getComponent(MainTheme);\n                maintheme.Success();\n            }\n            else{\n                this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n            }\n        }\n        else{\n            let x:number = event.getUILocation().x - 562.5;\n            let y:number = event.getUILocation().y - 1218;\n            let new_x:number;\n            let new_y:number;\n            if(x>=MapInfo.xstart1() && x<=MapInfo.xend1() && y>=MapInfo.ystart1() && y<=MapInfo.yend1()){\n                new_x = Math.floor((x - MapInfo.xstart1())/MapInfo.totalsize());\n                new_y = Math.floor((y - MapInfo.ystart1())/MapInfo.totalsize());\n                if(matrix1[new_x*15 + new_y].id == -1){\n                    let [r0, g0, b0] = [false, false, false];\n                    if(this.area == 1){\n                        matrix1[this.squarex*15 + this.squarey].id = -1;\n                        [r0, g0, b0] = GetTotalColor([this.squarex, this.squarey])\n                    }\n                    else{\n                        matrix2[this.squarex*2 + this.squarey] = false;\n                    }\n                    this.area = 1;\n                    matrix1[new_x*15 + new_y].id = this.id;\n                    matrix1[new_x*15 + new_y].mirrordir = this.dir;\n                    this.squarex = new_x;\n                    this.squarey = new_y;\n                    this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n                    ChangeMirror();\n                    let maintheme = this.node.parent.getComponent(MainTheme);\n                    maintheme.Success();\n                    this.ChangeMirrorState(index);\n                }\n                else{\n                    if(this.area == 1){\n                        this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n                    }\n                    else{\n                        this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n                    }\n                }\n            }\n            else if(x>=MapInfo.xstart2() && x<=MapInfo.xend2() && y>=MapInfo.ystart2() && y<=MapInfo.yend2()){\n                new_x = Math.floor((x - MapInfo.xstart2())/MapInfo.totalsize2x());\n                new_y = Math.floor((y - MapInfo.ystart2())/MapInfo.totalsize2y());\n                if(matrix2[new_x*2 + new_y] == false){\n                    if(this.area == 1){\n                        matrix1[this.squarex*15 + this.squarey].id = -1;\n                        ChangeMirror();\n                        let maintheme = this.node.parent.getComponent(MainTheme);\n                        maintheme.Success();\n                    }\n                    else{\n                        matrix2[this.squarex*2 + this.squarey] = false;\n                    }\n                    this.area = 2;\n                    matrix2[new_x*2 + new_y] = true;\n                    this.squarex = new_x;\n                    this.squarey = new_y;\n                    this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n                    this.ChangeMirrorState(index);\n                }\n                else{\n                    if(this.area == 1){\n                        this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n                    }\n                    else{\n                        this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n                    }\n                }\n            }\n            else{\n                if(this.area == 1){\n                    this.node.setPosition(this.squarex*MapInfo.totalsize() + MapInfo.xshift1(), this.squarey*MapInfo.totalsize() + MapInfo.yshift1(), 0);\n                }\n                else{\n                    this.node.setPosition(this.squarex*MapInfo.totalsize2x() + MapInfo.xshift2(), this.squarey*MapInfo.totalsize2y() + MapInfo.yshift2(), 0);\n                }\n            }\n        }\n    }\n\n    touchMove (event:EventTouch) {\n        this.node.setPosition(this.node.getPosition().x + event.getUIDelta().x, this.node.getPosition().y + event.getUIDelta().y, 0);\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}