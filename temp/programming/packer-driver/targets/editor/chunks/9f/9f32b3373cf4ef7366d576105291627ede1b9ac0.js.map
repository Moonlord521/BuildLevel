{"version":3,"sources":["file:///D:/CocosCreator/BuildLevel/assets/scripts/LevelSelect.ts"],"names":["_decorator","Component","sys","Sprite","Color","ccclass","property","LevelSelect","onLoad","LevelState","JSON","parse","localStorage","getItem","index","GetLevelIndex","sprite","node","getComponent","color","name","level_index","slice","length","Number"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;6BAGaO,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb,SACiCN,SADjC,CAC2C;AACvCO,QAAAA,MAAM,GAAG;AACL,cAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyB,YAAzB,CAAX,CAAjB;AACA,cAAIC,KAAK,GAAG,KAAKC,aAAL,EAAZ;AACA,cAAIC,MAAM,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBf,MAAvB,CAAb;;AAEA,cAAGM,UAAU,CAACK,KAAD,CAAb,EAAsB;AAClBE,YAAAA,MAAM,CAACG,KAAP,GAAe,IAAIf,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,CAApB,EAAuB,GAAvB,CAAf;AACH,WAFD,MAGK;AACDY,YAAAA,MAAM,CAACG,KAAP,GAAe,IAAIf,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CAAf;AACH;AACJ;;AAEDW,QAAAA,aAAa,GAAW;AACpB,cAAIK,IAAI,GAAG,KAAKH,IAAL,CAAUG,IAArB;AACA,cAAIC,WAAW,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcF,IAAI,CAACG,MAAnB,CAAlB;AACA,cAAIT,KAAK,GAAGU,MAAM,CAACH,WAAD,CAAlB;AACA,iBAAOP,KAAK,GAAG,CAAf;AACH;;AAnBsC,O;AAsB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, sys, Sprite, Color } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = LevelSelect\n * DateTime = Tue Nov 16 2021 16:19:38 GMT+0800 (中國標準時間)\n * Author = XieYe0920\n * FileBasename = LevelSelect.ts\n * FileBasenameNoExtension = LevelSelect\n * URL = db://assets/scripts/LevelSelect.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n \n@ccclass('LevelSelect')\nexport class LevelSelect extends Component {\n    onLoad() {\n        let LevelState = JSON.parse(sys.localStorage.getItem(\"LevelState\"));\n        let index = this.GetLevelIndex();\n        let sprite = this.node.getComponent(Sprite);\n\n        if(LevelState[index]) {\n            sprite.color = new Color(100, 200, 0, 255);\n        }\n        else {\n            sprite.color = new Color(255, 255, 255, 255);\n        }\n    }\n\n    GetLevelIndex(): number {\n        let name = this.node.name;\n        let level_index = name.slice(5, name.length);\n        let index = Number(level_index);\n        return(index - 1);\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}